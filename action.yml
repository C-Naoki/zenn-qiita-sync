name: Publish Blogs
description: When pushing Zenn articles to GitHub, convert them to Qiita format and publish them.
author: Naoki Chihara

inputs:
  root:
    required: false
    default: "./qiita"
    description: "Root directory path"
  qiita-token:
    required: true
    description: 'Qiita API token'
  convert-commit-message:
    required: false
    default: "Convert Zenn articles to Qiita format"
    description: "Commit message for converting Zenn articles to Qiita format"
  qiitacli-commit-message:
    required: false
    default: "Updated by qiita-cli"
    description: "Qiita commit message"

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21'

    - name: Install dependencies
      run: npm install
      shell: bash
      working-directory: ${{ github.action_path }}

    - name: Get changed markdown files
      id: files
      run: |
        git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^articles/.*\.md$" > changed_files.txt
        echo "Changed markdown files:"
        cat changed_files.txt
      continue-on-error: true
      shell: bash

    - name: Convert Zenn articles to Qiita format
      run: |
        for file in $(cat changed_files.txt); do
          bash bin/ztoq.sh "$file"
        done
        rm changed_files.txt
      shell: bash
      working-directory: ${{ github.action_path }}
      if: steps.files.outcome == 'success'

    - name: Commit converted Qiita articles
      run: |
        git config --local user.name ${{ github.actor }}
        git config --local user.email ${{ github.actor }}@users.noreply.github.com
        git add qiita/public/*.md
        git commit -m "${{ inputs.convert-commit-message }}"
        git push
      shell: bash
      if: steps.files.outcome == 'success'

    - name: Publish Qiita articles
      uses: increments/qiita-cli/actions/publish@v1
      with:
        qiita-token: ${{ inputs.qiita-token }}
        root: ${{ inputs.root }}
        commit-message: ${{ inputs.qiitacli-commit-message }}
